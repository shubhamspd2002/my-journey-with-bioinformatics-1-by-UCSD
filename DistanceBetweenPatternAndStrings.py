def hamming_distance(str1, str2):
    return sum(1 for x, y in zip(str1, str2) if x != y)

def distance_between_pattern_and_strings(pattern, dna):
    k = len(pattern)
    distance = 0
    
    for text in dna:
        hamming_dist = float('inf')
        for i in range(len(text) - k + 1):
            kmer = text[i:i+k]
            hamming_dist = min(hamming_dist, hamming_distance(pattern, kmer))
        distance += hamming_dist
    
    return distance

# Example usage:
pattern = "AGGGGT"
dna = ["CCTCCTGAGTAATTTCGGGCTCCAGCAGCCAAGACCCTCCGATGTGGCCACGGCGTGGTTTTTGATTATCCGTATGTGTCTGAAATTAATTAACAACAA", "GAGAGGGATCTGACGCGCGGTTTCTCTATAAAGTCACAACGAACACCCGGTTTCTTTGCTATGCCAGCTTAAGCTCTCGAATGGTTTAACCCCATTAGT", "TCATGTGATGCCGGAAGAGCAGACCTCGCCGTTCCGGAAAATCGGCTAGGATATACAGTTCGTCCAGGTTATTCAAGGGTTCGAATTCAGGGGGTTTTC", "GCGGACCTTGTTAACAAAAAGAAGCCGGAGCTCACGTCGAAGTCATAATTACTAATCGTTGGGGAACAATAGTGGTGCACCAGAATTGTGTCCCACCAT", "ACAGGTTAAGTCCTCTTACTATCAGGATGGCTGTTTGACGTGCGACGCATGGATACCGTGGGACGGTACCATCTTAGACTTCCCTTGTAGACTTCCACC", "ATTCGACACCACCCATGAAATAGCGCCCCGCGTCCACTCAGGCCTTCAGTCTGGCAACGAGAAAGCAGTGAAGCGGACGGGGACGCTGATAACTCCACA", "ACTCAAGTGCGCCGTACGTTGGCCGGCAACATGACCTGCTCCTATTCGTTAGCTTCGCGGTGGTGTCGGTCGCCACCATCAGTATGTACTCCGTCGCAC", "ATGCATGCAAAGTAAAGCAAGGATCATAGTCGTAACATTATTTAACAAACGCGCCTCGAATTCGACCCTTCACCTAGCGAAAAGCTAGGCCTAACTTGT", "ATTCGCTTCGTGCGCCAATATCTCATCACCCTTTGTAGTGCTCACAAACTAGAATTTTATACTGTACTAACTAGAGGTTTATGGGACTAGCTCGTGGCG", "AGCCACGGACGAGTAGCCCAATCCGGCATGCTTGCATACCTCGCGTCACTAAGAATTCAGACAGGTGGCGGTATTAACATCAGGCAACCGCAAAGGACT", "TATGTGCCTGTTTATCACTGCCCTACGGCCCGTATGAGGCTCTCCATCTCCGCTCGAACAATGGCCAAAGGGTACACAACTCAGAATGCTATCAGCACT", "GGCGCCCTAATTCATATAAAGTCCAGCGCGCAATCTGCAAGAAATTATTTTCCTCTCAAGTATTGGGGTTGACGAAGAGCACAGGCTCCCAATACTATG", "ATGATGAATTACAGCAATCGAATTTAATCCTGCATAGTTGTTTGGTGGAACTCACACACACTCTACCTTCGGCAGCGCTGTAGCCAACTACGTCTTCCT", "ATGAGGGGTACCGGTATATGTGCGCTATTAGTGTGACTGCGCTAGCCAAAGCCAAATCCAAATAACTTGTATCGAGTGTGCGAAAAGATGCGTCTGCCC", "CCGACGTGAGCATGATTCAGTATAACTTGACTTCTGTGGGCGTAGACTCTGTTGATACCATACCTTAAAGGCGACAATGCGCAACTAACACCAGGTGAA", "TGAAAATCAGGTGCTAGCAGATCGTCCTTCTTCCGATCATCCGAAGTATGTGACTGAGACTCATTGTACTATCCATCTAGAAAAACGACAGTGTCCGTG", "AGAGGCAACTCCTACCGACGGTGAGGAACGACTATCTTAAGGGTGCGTTCCTGAATGGGTAAAGTATCAAGCTTTTATGTGATAGTCCATAAATCTGGA", "CTGGAACAGATAGTGACGTATTATGTCGGTGGAAGAAAATCAATGTGTGGTTCGCTATGAGTCCTTGTTTCCCTGGCGCGCTTTTTACTCAATGGGATC", "TCCAGTCAGTTTCAGCATGTAGCGCGCCTCTCTGCAGGGTTTAAAACTAGCCCGCCTTTCGCAAAGGAAAAACAGATTCCGAACTACGCAACGGCCCAG", "TCAAGACGCATAGGCCCGGTCTGATGCGTTATGCAACATCCAAAACATCCAAATTACCGTCAGGACAGAAGAGCCAAGCTCTCGGCACGACCTCCAACA", "GTAATCTACTTACACCTTTACGCCTAATGAGTCTATCGAAAGGCGCCTCTACTAAGTGGATCGTGCATAGCGGTTAAGACCTGCCCAAAATACAAAACG", "AGGTTTTATTAGCCCTAATCTACTATAGTTTCATACATACCGAAATGTATGTGCGCGGGAGCCTACTGAGAAAACGCCAGAACATTCTGATTTGCCCCT", "ACAGTAGAATAGGAATGACAGGACATGACTGTTCAGTAAGAAAATTATAGTTTGATGCTACTAGAGTAAAGTTCGCTTATGGTATACCATTTAGCCTGC", "AGAATGTCAGAAGAGCCGTTATCCTATATAAGTGGCGTAGTAGCCTCCTTAGCCGGAGCGAGTCTCGACTATCTAGGAGATTCTCGGGTGTGTCCATCC", "CAATTATTGGCACAGGGGTTTTTGTCTGGATCCGCTAGTTATGTTCGGGCAAGTCGCACATCGCATACCATGTTCGACTATAGCCTAAGTTTTTCATAT", "GTCGCATCCTGATGGACCGCGTGGCTGTTTTGGCCGCGTCTCGTACTGTAACGGCGTACGTTTCGCTCTAGAATCTTCTCGCGGACGCGTGCGTTCGGT", "TACAAAGCATCTCGGCTTTAACGCCTACGGCGAACGCTCGCTTACTCAATGCAAAATTTACACTCTGTCGGAAAAAATGTAGGAAGACCGACAACCTGC", "GCCCCTCTTGACCTGGGATACCACGTCCGCACTTCTGACCGATTTGGGGGCTGCATTGCTTTTCTTCTTAGCACTTCTCTGTATCATCGAAAATGAGCA", "AGCTGCACAGGCTATGCCGACATGCGACGGGGCATGTCCGATCCTCCAACTCCCCATGCCAAGGATCTAGCTCTGATGACTGATCGCTTTAAATCGTTA", "GGAAACCACACCAAAGAAAAGTGAGGATGGCTCTCGGGTGATACATAGCTCGAAAGTTCCCAATCAGACACGTCTGCGTCCACTCGTGCCGCGATTAAT", "CTGTGTGCTGGCGCCGTTGCCAAGCAGCCAGATGGGCCCAACGCAACAGTAACTCTTCCCATCTAGCGTTTTCTTATTATTCACAAGACCGCCTGCCCT", "GTCGGGCCAAGGAGAATTGGTTGAGCAGATGTGTGGCTCGGGCGGATGGTTGGACGAGACGCTGCGCAGGGACACACTGATCAGTCGAGACCGAAACCT", "TTTGAATCTAACAACAGAACCGCCCTGGTGTGTATGCTAGTTTACCGGATGTTGATAAGTCGTGTGACCACGTCGATGACATGTAGCAGCGGCCAAAAG", "CCCGTTGTTTTGAACAGCCGTATTAGCCGGATCGTGGGCCCTCACGCCGCTGGGGTAACGACTATAATGCGCCATAACTCAGTAATAGGTTCCGCACCA", "CGCGGCTGTACATGCAGGCTCCCCTATTACTTGGTGTAGCATATAGGTATAGACTGATTTATACAGCTCTGTGGCACAGGCTTGCCCATTGCAGCGTGA", "GTTAAGTTTTTCGAATGCTAGCGTTGCCTGTGCGATTGAGTCTTTAGGCTTAATGAATAATGTCTGATCGCGCCATGGGCTCGAGGTCTGTTGAGAAGT", "AAACTACGTCGTGCCTCTTAACAGTTTCCTGAATTCCGGGGAAACTTGCTCGTTGCTCGGCACGCACCCTTCCATTTAACCAGGAGTTGAAGCGAAACT", "GCCGCCATGGGGAGCCTCGTTTCCAACAATGGCGTGTCCGCCAGGTGAAAATTCCGGAATAGCTTTGGTCGTCCCACGAGAGAACGCCCGCTAAATAAG", "GCTCACCTCTTACTCCGAAAACGTTGTCCTCTGCTCGGGGCATCACGAACTTTGGGCATGTTTCCGTACGACCGATAAAGTCAATGGTGTTCGGGGACT"]

result = distance_between_pattern_and_strings(pattern, dna)
print(result)
