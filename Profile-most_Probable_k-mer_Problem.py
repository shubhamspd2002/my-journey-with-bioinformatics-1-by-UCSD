def profile_most_probable_kmer(text, k, profile):
    n = len(text)
    max_prob = -1
    most_probable_kmer = ""

    for i in range(n - k + 1):
        kmer = text[i:i + k]
        current_prob = 1

        for j in range(k):
            base = kmer[j]
            if base == 'A':
                current_prob *= profile[0][j]
            elif base == 'C':
                current_prob *= profile[1][j]
            elif base == 'G':
                current_prob *= profile[2][j]
            elif base == 'T':
                current_prob *= profile[3][j]

        if current_prob > max_prob:
            max_prob = current_prob
            most_probable_kmer = kmer

    return most_probable_kmer

# Example usage:
text = "TGCGCTTGTCATTGTGGTTCGTCACTTGCCATACCAGACGCGATCCTTGTTCACCGCCGAATTTTCAGTGTACCCGATTAAGGATCATATAATAAGCGCGACCTGTGGAAAGTAGACCCAACGTCAACATCGAGATCCCGTCTTAACCATGTAGGCGACAGTATGATCTAGTATCTTCATTACCCTCTAAGGACGCTTTTCCACAAGCATATCATGGATTACAACGACACCTAGACTAGTACACTCAATGACAGCTCCGGAGACCCCCACGCAGCGGGCACTTCATGCTACACCAGCACTACAGGGCCGTACCTGTTGGATCCCTTCCGGAACAGTTATCTGCTGTGTGAGAGCCCTGGATGTTTGCTGGCCATGATTAGCACATTGACCTTGGTCCGCTGTGTACCGCAACCGATTACGTCTCTTACGTGGATGATAGGTATCGTTAGTCACTTATCACAAGATAAGGCCGTGATCTAGTGGGCCAAGGGTTTTCGTCGAAAAAAACTGGCTGCTTTAAATCGGGGTACGGACCAGGAGGACTAGCTAGCAAAGATAGATGCAGAGATAATCAATGCCAAACGATTGCTCCACGATACTTCGAAGGGGTCGGTAGTATATCATTTCGCCTGGGCGGCCCCCAAGGAAATCGGGTAGGCTGAAATGTGCTAAGCATATTGTTCTTCGCTCAGGTCTGTATGATCCAAATAGAACAACACCGTATTCGATATAGTCGTAGTAGTCGCATCGCGACGCGCACCCGCCGATAAATTTCATCGGCTAGCTATGGTCGTCAATCACACATGGGTAGATAGCACCGTGCCTATCGGACTGAGACCAGACAGTATTCATTAATGCCTACAGCCTACGGGGCGGTGGTCGTACGCGATATGCCAGTTTTTTTAGACCTACTGTTACAATCGGGATTGTGGATATACTGTTTATGACCGAAAAGGCTACGACCGGGAAGTACTTACGAGTTACCAGGGTTTTCCCCCAC"
k = 13
profile_matrix = [
    [0.303, 0.408, 0.224, 0.171, 0.263, 0.158, 0.184, 0.303, 0.237, 0.237, 0.25, 0.237, 0.276],
    [0.079, 0.171, 0.316, 0.289, 0.263, 0.237, 0.224, 0.211, 0.211, 0.118, 0.303, 0.276, 0.197],
    [0.329, 0.25, 0.197, 0.25, 0.25, 0.316, 0.395, 0.237, 0.224, 0.447, 0.184, 0.276, 0.25],
    [0.289, 0.171, 0.263, 0.289, 0.224, 0.289, 0.197, 0.25, 0.329, 0.197, 0.263, 0.211, 0.276]
]

result = profile_most_probable_kmer(text, k, profile_matrix)
print("Profile-most probable k-mer:", result)
